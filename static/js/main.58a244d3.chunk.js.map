{"version":3,"sources":["components/OnProgress.js","components/Navbar.js","pages/Home.js","pages/Events.js","pages/Photos.js","pages/Restaurants.js","App.js","serviceWorker.js","index.js"],"names":["OnProgress","className","src","alt","Component","MyNavbar","Navbar","fixed","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","Link","Home","React","Events","Photos","Restaurants","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.58a244d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './styles/OnProgress.css';\r\n\r\nexport class OnProgress extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-center text-center h-100\">\r\n                <div className=\"h-100\">\r\n                <h1>Este sitio esta en construccion, vuelve pronto para ver los cambios</h1>\r\n                <img src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"Loading\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OnProgress;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport './styles/Navbar.css';\r\n\r\nexport class MyNavbar extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar fixed=\"top\" expand=\"lg\" className=\"justify-content-between navbar\">\r\n                <div>\r\n                    <Navbar.Brand><Link className=\"mynavbar-link\" to=\"/\">Atequiza</Link></Navbar.Brand>\r\n                </div>\r\n                <div>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n                        <Nav className=\"mr-auto text-center\">\r\n                            <Nav.Link><Link className=\"mynavbar-link\" to=\"/events\">Eventos</Link></Nav.Link>\r\n                            <Nav.Link><Link className=\"mynavbar-link\" to=\"/photos\">Fotografia</Link></Nav.Link>\r\n                            <Nav.Link><Link className=\"mynavbar-link\" to=\"/restaurants\">Comida</Link></Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </div>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNavbar;","import React from 'react';\r\nimport OnProgress from '../components/OnProgress';\r\nimport MyNavbar from '../components/Navbar';\r\n\r\nimport './styles/Home.css'\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid container-home\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <MyNavbar />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row d-flex align-items-center justify-contenr-center home-hero\">\r\n                    <div className=\"col-12\">\r\n                        <OnProgress />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport OnProgress from '../components/OnProgress'\r\n\r\nclass Events extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-100\">\r\n            <OnProgress></OnProgress>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Events;","import React from 'react';\r\nimport OnProgress from '../components/OnProgress'\r\n\r\nclass Photos extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-100\">\r\n            <OnProgress></OnProgress>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport OnProgress from '../components/OnProgress'\r\n\r\nclass Restaurants extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"h-100\">\r\n            <OnProgress></OnProgress>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Restaurants;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './pages/Home';\r\nimport Events from './pages/Events';\r\nimport Photos from './pages/Photos';\r\nimport Restaurants from './pages/Restaurants';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/events\">\r\n            <Events />\r\n          </Route>\r\n          <Route path=\"/photos\">\r\n            <Photos />\r\n          </Route>\r\n          <Route path=\"/restaurants\">\r\n            <Restaurants />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}